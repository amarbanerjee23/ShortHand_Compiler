
@max = common global i32 0
@j = common global i32 0
@k = common global i32 0
@i = global [6 x i32] zeroinitializer
@0 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@2 = private unnamed_addr constant [8 x i8] c"Value::\00", align 1
@3 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c" \00", align 1
@5 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@6 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@7 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@8 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@9 = private unnamed_addr constant [18 x i8] c"Largest Number is\00", align 1
@10 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@11 = private unnamed_addr constant [2 x i8] c" \00", align 1
@12 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@13 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

declare i32 @printf(i8*, ...)

declare i32 @scanf(i8*, ...)

define void @main() {
entry:
  store i32 0, i32* @max
  store i32 0, i32* @j
  store i32 0, i32* @k
  br label %while_condition

while_condition:                                  ; preds = %loop, %entry
  %0 = load i32, i32* @k
  %lttmp = icmp slt i32 %0, 6
  br i1 %lttmp, label %loop, label %afterloop

loop:                                             ; preds = %while_condition
  %1 = load i32, i32* @k
  %i_IDX = getelementptr [6 x i32], [6 x i32]* @i, i32 0, i32 %1
  %scanfCall = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @0, i32 0, i32 0), i32* %i_IDX)
  %2 = load i32, i32* @k
  %addtmp = add i32 %2, 1
  store i32 %addtmp, i32* @k
  br label %while_condition

afterloop:                                        ; preds = %while_condition
  br label %while_condition1

while_condition1:                                 ; preds = %ifnext, %afterloop
  %3 = load i32, i32* @j
  %lttmp4 = icmp slt i32 %3, 6
  br i1 %lttmp4, label %loop2, label %afterloop3

loop2:                                            ; preds = %while_condition1
  %printfCall = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i32 0, i32 0))
  %printfCall5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  %4 = load i32, i32* @j
  %i_IDX6 = getelementptr [6 x i32], [6 x i32]* @i, i32 0, i32 %4
  %5 = load i32, i32* %i_IDX6
  %printfCall7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @5, i32 0, i32 0), i32 %5)
  %printfCall8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0))
  %6 = load i32, i32* @j
  %i_IDX9 = getelementptr [6 x i32], [6 x i32]* @i, i32 0, i32 %6
  %7 = load i32, i32* %i_IDX9
  %8 = load i32, i32* @max
  %gttmp = icmp sgt i32 %7, %8
  br i1 %gttmp, label %if, label %ifnext

afterloop3:                                       ; preds = %while_condition1
  %printfCall12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @9, i32 0, i32 0))
  %printfCall13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0))
  %9 = load i32, i32* @max
  %printfCall14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @12, i32 0, i32 0), i32 %9)
  %printfCall15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @13, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i32 0, i32 0))
  ret void

if:                                               ; preds = %loop2
  %10 = load i32, i32* @j
  %i_IDX10 = getelementptr [6 x i32], [6 x i32]* @i, i32 0, i32 %10
  %11 = load i32, i32* %i_IDX10
  store i32 %11, i32* @max
  br label %ifnext

ifnext:                                           ; preds = %if, %loop2
  %12 = load i32, i32* @j
  %addtmp11 = add i32 %12, 1
  store i32 %addtmp11, i32* @j
  br label %while_condition1
}
