int getMax(int arr[], int n)
{
int mx = arr[0];
loop (int i = 1; i < n)
{
if (arr[i] > mx)
{mx = arr[i];}
i = i + 1;
}
return mx;
}
void countSort(int arr[], int n, int exp)
{
int output[n]; # output array
int i, count[10] = {0};
# Store count of occurrences in count[]
loop (i = 0; i < n)
{
count[ (arr[i]/exp)%10 ]++;
i = i + 1;
}
loop (i = 1; i < 10)
{
count[i] += count[i - 1];
i = i + 1;
}
loop (i = n - 1; i >= 0)
{
int itemVar = count[ (arr[i]/exp)%10 ];
output[itemVar - 1] = arr[i];
itemVar = itemVar - 1;
count[ (arr[i]/exp)%10 ] = itemVar;
i = i - 1;
}
loop (i = 0; i < n)
{
arr[i] = output[i];
i = i + 1;
}
}
void radixsort(int arr[], int n)
{
int m = getMax(arr, n);
loop (int exp = 1; m/exp > 0)
{
countSort(arr, n, exp);
exp = exp * 10;
}
}
void print(int arr[], int n)
{
loop (int i = 0; i < n; i++)
print arr[i] "\n";
}
int arr[];
arr = read;
int n = sizeof(arr)/sizeof(arr[0]);
radixsort(arr, n);
print arr n;